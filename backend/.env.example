 # ===========================================
# EMERTRIX BACKEND ENVIRONMENT VARIABLES
# ===========================================
# Copy this file to .env and update the values

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# MongoDB connection string
# For local development: mongodb://localhost:27017/emertrix
# For Railway/production: use your MongoDB connection string
MONG_URI=mongodb://localhost:27017/emertrix

# ===========================================
# SERVER CONFIGURATION
# ===========================================
# Port for the backend server
PORT=4000

# Environment mode (development, production, test)
NODE_ENV=development

# ===========================================
# AUTHENTICATION
# ===========================================
# JWT secret key for token signing (use a strong, random string in production)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# ===========================================
# CORS CONFIGURATION
# ===========================================
# Frontend URL for CORS (comma-separated for multiple origins)
FRONTEND_URL=http://localhost:5173
# Alternative: specify multiple origins
# CORS_ORIGINS=http://localhost:5173,http://localhost:3000

# ===========================================
# AWS S3 CONFIGURATION (for file uploads)
# ===========================================
# AWS credentials for S3 file uploads
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_REGION=us-east-1
S3_BUCKET=your-s3-bucket-name

# ===========================================
# EMAIL SERVICE (Brevo/Sendinblue)
# ===========================================
# Brevo SMTP credentials for sending emails
BREVO_SMTP_USER=your-brevo-smtp-user
BREVO_SMTP_PASS=your-brevo-smtp-password

# ===========================================
# NOTES
# ===========================================
# 1. Never commit the actual .env file to version control
# 2. Use strong, unique values for JWT_SECRET in production
# 3. Ensure AWS credentials have minimal required permissions
# 4. Test email configuration in development environment first